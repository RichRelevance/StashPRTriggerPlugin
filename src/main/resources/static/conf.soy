{namespace stash.page.pullrequest.trigger.settings}

/**
 * @param repository
 * @param prTriggerSettings
 **/
{template .viewPullRequestTriggerSettings}
<!DOCTYPE html>
<html>
    <head>
        <meta name="decorator" content="stash.repository.settings">
        <meta name="projectKey" content="{$repository.project.key}">
        <meta name="repositorySlug" content="{$repository.slug}">
        <meta name="activeTab" content="repository-settings-pullrequest-trigger-settings">
        <title>{{stash_i18n('stash.web.pullrequest.trigger.settings.title', 'Pull Request Trigger settings for {0} / {1}', $repository.project.name, $repository.name)}}</title>
    </head>
    <body>
        {call aui.page.pageHeader}
            {param content}
                <h2>{stash_i18n('stash.web.pullrequest.trigger.settings.heading', 'PR Trigger')}</h2>
            {/param}
        {/call}
        {call aui.form.form}
            {param action: '' /}
            {param content}
                {call aui.form.field}
                    {param type: 'checkbox' /}
                    {param id: 'enabled' /}
                    {param labelContent: 'Enabled' /}
                    {param isChecked: $prTriggerSettings.enabled /}
                    {param descriptionText: 'Enable Bamboo Trigger for this Repository?' /}
                {/call}
                {call aui.form.textField}
                    {param id: 'url' /}
                    {param value: $prTriggerSettings['url'] /}
                    {param labelContent: 'URL' /}
                    {param descriptionText: 'Bamboo Base URL' /}
                    {param isRequired: true /}
                {/call}
                {call aui.form.textField}
                    {param id: 'user' /}
                    {param value: $prTriggerSettings['user'] /}
                    {param labelContent: 'User' /}
                    {param descriptionText: 'Bamboo REST API User' /}
                    {param isRequired: true /}
                {/call}
                {call aui.form.passwordField}
                    {param id: 'password' /}
                    {param value: $prTriggerSettings['password'] /}
                    {param labelContent: 'Password' /}
                    {param descriptionText: 'Bamboo REST API Password' /}
                    {param isRequired: true /}
                {/call}
                {call aui.form.textField}
                    {param id: 'plan' /}
                    {param value: $prTriggerSettings['plan'] /}
                    {param labelContent: 'Plan' /}
                    {param descriptionText: 'Bamboo Build Plan (PROJ-PLAN)' /}
                    {param isRequired: true /}
                {/call}
                {call aui.form.submit}
                    {param id: 'submit-form' /}
                    {param name: 'save' /}
                    {param value: 'save' /}
                {/call}
            {/param}
        {/call}
        <script>
{literal}
(function($, _) {

var createSave = function(ajax, pageState) {
    return function(payload) {
        return ajax.rest({
            url : AJS.contextPath() + '/rest/pullrequest-trigger-settings/latest/projects/' + pageState.getProject().key + '/repos/' + pageState.getRepository().slug + '/pullrequest-trigger-settings',
            type: 'PUT',
            data: payload
        });
    };
};

var save = function(payload) {
    save = createSave(require('util/ajax'), require('model/page-state'));
    return save(payload);
};


AJS.$(function(){
  AJS.$("#submit-form").click(function(e){
    e.preventDefault();
    var payload = {
      enabled : AJS.$("#enabled").is(':checked'),
      url     : AJS.$("#url").attr("value"),
      user    : AJS.$("#user").attr("value"),
      password: AJS.$("#password").attr("value"),
      plan    : AJS.$("#plan").attr("value")
    };
    save(payload);
  });
});

/*$(document).on('change', '.content-body input.checkbox', function(e) {
    e.preventDefault();
    var payload = _.reduce($('.content-body input.checkbox').toArray(), function(memo, el) {
        var $el = $(el);
        memo[$el.attr('id')] =  $el.is(':checked');
        return memo;
    }, {});
    save(payload);
});*/

})(AJS.$, _);
{/literal}
        </script>
    </body>
</html>
{/template}
